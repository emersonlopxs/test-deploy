{"version":3,"sources":["../../../src/handlers/user/put-photo.js"],"names":["fsWriteFileAsync","util","promisify","fs","writeFile","fsUnlinkAsync","unlink","fsRealPathAsync","realpath","putPhoto","userId","photo","blobServiceClient","BlobServiceClient","fromConnectionString","AZURE_STORAGE_CONNECTION_STRING","containerClient","getContainerClient","tempDir","os","tmpdir","tempfile","path","join","uuid","v4","blobClient","getBlobClient","toString","blockBlobClient","getBlockBlobClient","uploadFile"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,gBAAgB,GAAGC,cAAKC,SAAL,CAAeC,YAAGC,SAAlB,CAAzB;;AACA,MAAMC,aAAa,GAAGJ,cAAKC,SAAL,CAAeC,YAAGG,MAAlB,CAAtB;;AACA,MAAMC,eAAe,GAAGN,cAAKC,SAAL,CAAeC,YAAGK,QAAlB,CAAxB;;AAEO,MAAMC,QAAQ,GAAG,OAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC/C,QAAMC,iBAAiB,GAAGC,+BAAkBC,oBAAlB,CAAuCC,uCAAvC,CAA1B;;AACA,QAAMC,eAAe,GAAGJ,iBAAiB,CAACK,kBAAlB,CAAqC,aAArC,CAAxB,CAF+C,CAI/C;;AACA;AACF;AACA;AAEE;;AACA;AACF;AACA;AACA;AAEE;AACA;;AACA,QAAMC,OAAO,GAAG,MAAMX,eAAe,CAACY,YAAGC,MAAH,EAAD,CAArC;;AACA,QAAMC,QAAQ,GAAGC,cAAKC,IAAL,CAAUL,OAAV,EAAmBM,cAAKC,EAAL,EAAnB,CAAjB;;AACA,QAAMzB,gBAAgB,CAACqB,QAAD,EAAWV,KAAX,CAAtB;AAEA,QAAMe,UAAU,GAAGV,eAAe,CAACW,aAAhB,CAA8BjB,MAAM,CAACkB,QAAP,EAA9B,CAAnB;AACA,QAAMC,eAAe,GAAGH,UAAU,CAACI,kBAAX,EAAxB;AACA,QAAMD,eAAe,CAACE,UAAhB,CAA2BV,QAA3B,CAAN;AAEA,QAAMhB,aAAa,CAACgB,QAAD,CAAnB;AACD,CA1BM","sourcesContent":["import fs from \"fs\";\nimport util from \"util\";\nimport uuid from \"uuid\";\nimport os from \"os\";\nimport path from \"path\";\nimport { BlobServiceClient } from \"@azure/storage-blob\";\nimport { AZURE_STORAGE_CONNECTION_STRING } from \"~/core/config\";\n\nconst fsWriteFileAsync = util.promisify(fs.writeFile);\nconst fsUnlinkAsync = util.promisify(fs.unlink);\nconst fsRealPathAsync = util.promisify(fs.realpath);\n\nexport const putPhoto = async (userId, photo) => {\n  const blobServiceClient = BlobServiceClient.fromConnectionString(AZURE_STORAGE_CONNECTION_STRING);\n  const containerClient = blobServiceClient.getContainerClient(\"user-photos\");\n\n  // Buffer: not working - Feb, 6 2020\n  /* const blobClient = containerClient.getBlobClient(userid.toString());\n    const blockBlobClient = blobClient.getBlockBlobClient();\n    await blockBlobClient.upload(photo, photo.length); */\n\n  // Stream: not working - Feb, 6 2020\n  /* const blobClient = containerClient.getBlobClient(userid.toString());\n    const blockBlobClient = blobClient.getBlockBlobClient();\n    const stream = this.bufferToStream(photo);\n    await blockBlobClient.uploadStream(stream); */\n\n  // *** Please keep the above comments to the next developer knows that It has been tried ***\n  // TempFile: working\n  const tempDir = await fsRealPathAsync(os.tmpdir());\n  const tempfile = path.join(tempDir, uuid.v4());\n  await fsWriteFileAsync(tempfile, photo);\n\n  const blobClient = containerClient.getBlobClient(userId.toString());\n  const blockBlobClient = blobClient.getBlockBlobClient();\n  await blockBlobClient.uploadFile(tempfile);\n\n  await fsUnlinkAsync(tempfile);\n};\n"],"file":"put-photo.js"}