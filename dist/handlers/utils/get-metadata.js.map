{"version":3,"sources":["../../../src/handlers/utils/get-metadata.js"],"names":["urlMetadata","url","catch","error","printableError","errorJson","JSON","stringify","Error","Promise","reject","ExposableError","errorMessage","errorParts","split","statusCode"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACzB,0BAAaA,GAAb,EAAkBC,KAAlB,CAAwBC,KAAK,IAAI;AAC/B;AACA;AACA;AACA;AAEA,QAAMC,cAAc,GAAG,oCAAeD,KAAf,CAAvB;AACA,QAAME,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,cAAf,EAA+B,IAA/B,EAAqC,CAArC,CAAlB;AAEA,MAAI,CAACD,KAAK,CAACK,KAAX,EAAkB,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,sBAAJ,CAAmBN,SAAnB,EAA8B,GAA9B,EAAmCF,KAAnC,CAAf,CAAP,CATa,CAW/B;AACA;AACA;AACA;;AAEA,QAAMS,YAAY,GAAGT,KAAK,CAACK,KAA3B;AACA,QAAMK,UAAU,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAnB;AACA,QAAM,IAAKC,UAAL,IAAmBF,UAAzB;AAEA,SAAOJ,OAAO,CAACC,MAAR,CAAe,IAAIC,sBAAJ,CAAmBC,YAAnB,EAAiCG,UAAjC,EAA6CZ,KAA7C,CAAf,CAAP;AACD,CArBD,CADK","sourcesContent":["import urlInspector from \"url-metadata\";\nimport { serializeError } from \"serialize-error\";\nimport { ExposableError } from \"~/errors\";\n\nexport const urlMetadata = ({ url }) =>\n  urlInspector(url).catch(error => {\n    // Code extracted from url-metadata lib\n    //  if (err || !response) {\n    //     return dfd.reject(err)\n    //   }\n\n    const printableError = serializeError(error);\n    const errorJson = JSON.stringify(printableError, null, 2);\n\n    if (!error.Error) return Promise.reject(new ExposableError(errorJson, 500, error));\n\n    // Code extracted from url-metadata lib\n    //   if (response.statusCode && response.statusCode !== 200) {\n    //     return dfd.reject({ Error: 'response code ' + response.statusCode })\n    //   }\n\n    const errorMessage = error.Error;\n    const errorParts = errorMessage.split(\" \");\n    const [, , statusCode] = errorParts;\n\n    return Promise.reject(new ExposableError(errorMessage, statusCode, error));\n  });\n"],"file":"get-metadata.js"}