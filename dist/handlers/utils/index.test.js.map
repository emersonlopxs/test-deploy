{"version":3,"sources":["../../../src/handlers/utils/index.test.js"],"names":["jest","mock","describe","it","firstCity","handler","listCities","state","expect","toBe","firstSchool","listSchools","city","type","nomeEscola","models","accesses","list","mockImplementation","userId","userName","roleName","screenName","env","hitted","Date","listAccesses","limit"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEAA,IAAI,CAACC,IAAL,CAAU,mBAAV;AAEAC,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,aAAD,EAAgB,YAAY;AAC5B,UAAM,CAACC,SAAD,IAAc,MAAMC,OAAO,CAACC,UAAR,CAAmB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnB,CAA1B;AACAC,IAAAA,MAAM,CAACJ,SAAD,CAAN,CAAkBK,IAAlB,CAAuB,YAAvB;AACD,GAHC,CAAF;AAID,CALO,CAAR;AAOAP,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAY;AAC7B,UAAM,CAACO,WAAD,IAAgB,MAAML,OAAO,CAACM,WAAR,CAAoB;AAC9CJ,MAAAA,KAAK,EAAE,IADuC;AAE9CK,MAAAA,IAAI,EAAE,UAFwC;AAG9CC,MAAAA,IAAI,EAAE;AAHwC,KAApB,CAA5B;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAiBJ,WAAvB;AAEAF,IAAAA,MAAM,CAACM,UAAD,CAAN,CAAmBL,IAAnB,CAAwB,2BAAxB;AACD,GAVC,CAAF;AAWD,CAZO,CAAR;AAcAP,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBa,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,kBAArB,CAAwC,YAAY,CAClD;AACEC,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,UAAU,EAAE,MAJd;AAKEC,IAAAA,GAAG,EAAE,MALP;AAMEC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANV,GADkD,CAApD;AAWAtB,EAAAA,EAAE,CAAC,aAAD,EAAgB,YAAY;AAC5B,UAAM,CAACC,SAAD,IAAc,MAAMC,OAAO,CAACqB,YAAR,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAA1B;AACAnB,IAAAA,MAAM,CAACJ,SAAS,CAACe,MAAX,CAAN,CAAyBV,IAAzB,CAA8B,CAA9B;AACD,GAHC,CAAF;AAID,CAhBO,CAAR","sourcesContent":["import \"dotenv/config\";\nimport * as handler from \"./index\";\nimport * as models from \"~/models\";\n\njest.mock(\"~/models/accesses\");\n\ndescribe(\"Cities\", () => {\n  it(\"List Cities\", async () => {\n    const [firstCity] = await handler.listCities({ state: \"SP\" });\n    expect(firstCity).toBe(\"Adamantina\");\n  });\n});\n\ndescribe(\"Schools\", () => {\n  it(\"List Schools\", async () => {\n    const [firstSchool] = await handler.listSchools({\n      state: \"MG\",\n      city: \"Contagem\",\n      type: \"publicas\",\n    });\n\n    const { nomeEscola } = firstSchool;\n\n    expect(nomeEscola).toBe(\"CEFET MG- CAMPUS CONTAGEM\");\n  });\n});\n\ndescribe(\"Access\", () => {\n  models.accesses.list.mockImplementation(async () => [\n    {\n      userId: 0,\n      userName: \"test\",\n      roleName: \"test\",\n      screenName: \"test\",\n      env: \"test\",\n      hitted: new Date(),\n    },\n  ]);\n\n  it(\"List Access\", async () => {\n    const [firstCity] = await handler.listAccesses({ limit: 1 });\n    expect(firstCity.userId).toBe(0);\n  });\n});\n"],"file":"index.test.js"}