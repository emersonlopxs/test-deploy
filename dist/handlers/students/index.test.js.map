{"version":3,"sources":["../../../src/handlers/students/index.test.js"],"names":["jest","mock","describe","bob","city","cpf","email","name","state","gradeId","isPublicSchool","schoolName","siteId","birthDate","gender","themes","workshops","alice","trudy","table","login","mockImplementation","length","models","students","get","params","query","limit","offset","filter","item","includes","slice","list","insert","row","id","userId","createdAt","Date","modifiedAt","push","update","index","findIndex","Error","remove","splice","it","handler","first","second","thrid","expect","toBe","bobCpf","boboEmail","boboBirthDate","bobGender","bobPayload","aliceCpf","aliceEmail","aliceBirthDate","aliceGender","alicePayload","trudyCpf","trudyEmail","trudyBirthDate","trudyGender","trudyPayload"],"mappings":"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","sourcesContent":["\nimport \"dotenv/config\";\nimport * as handler from \"./index\";\nimport * as models from \"~/models\";\nimport { login } from \"~/handlers/oauth/login\";\n\njest.mock(\"~/models/students\");\njest.mock(\"~/handlers/oauth/login\");\n\ndescribe(\"Students tests\", () => {\n  const bob = {\n    city: \"SAO PAULO\",\n    cpf: \"12345678909\",\n    email: \"bob@contoso.com\",\n    name: \"BOB ROBSON\",\n    state: \"SP\",\n    gradeId: 1,\n    isPublicSchool: true,\n    schoolName: \"ESCOLA MUNICIPAL SAO PAULINA\",\n    siteId: 36,\n    birthDate: \"2000-01-01T00:00:00.000Z\",\n    gender: \"M\",\n    themes: \"[1, 2]\",\n    workshops: \"[3, 4]\",\n  };\n\n  const alice = {\n    city: \"SAO PAULO\",\n    cpf: \"01234567890\",\n    email: \"bob@contoso.com\",\n    name: \"ALICE WATSON\",\n    state: \"SP\",\n    gradeId: 2,\n    isPublicSchool: false,\n    schoolName: \"ESCOLA PARTICULAR SAO PAULINA\",\n    siteId: 36,\n    birthDate: \"1986-01-01T00:00:00.000Z\",\n    gender: \"F\",\n    themes: \"[5, 6]\",\n    workshops: \"[7, 8]\",\n  };\n\n  const trudy = {\n    city: \"SAO PAULO\",\n    cpf: \"00123456797\",\n    email: \"bob@contoso.com\",\n    name: \"TRUDY NEWMAN\",\n    state: \"SP\",\n    gradeId: 3,\n    isPublicSchool: true,\n    schoolName: \"ESCOLA DESCONHECIDA\",\n    siteId: 36,\n    birthDate: \"1990-01-01T00:00:00.000Z\",\n    gender: \"F\",\n    themes: \"[9, 10]\",\n    workshops: \"[11, 12]\",\n  };\n\n  const table = [];\n\n  login.mockImplementation(async () => table.length);\n\n  models.students.get.mockImplementation(async params => {\n    const { query, limit, offset } = params;\n\n    return table.filter(item => item.name.includes(query)).slice(offset, limit + offset);\n  });\n\n  models.students.list.mockImplementation(async params => {\n    const { query, limit = 10, offset = 0 } = params;\n\n    if (query) return table.filter(item => item.name.includes(query)).slice(offset, limit + offset);\n    return table.slice(offset, limit + offset);\n  });\n\n  models.students.insert.mockImplementation(async row => {\n    const id = table.length + 1;\n    const userId = id * 10;\n    const createdAt = new Date();\n    const modifiedAt = new Date();\n    table.push({ ...row, id, userId, createdAt, modifiedAt });\n    return id;\n  });\n\n  models.students.update.mockImplementation(async row => {\n    const { id } = row;\n    const modifiedAt = new Date();\n\n    // I want to keep the order of the array\n    const index = table.findIndex(item => item.id === id);\n    if (index < 0) throw new Error(`Item with Id ${id} not found on the table`);\n\n    table[index] = { ...table[index], ...row, modifiedAt };\n  });\n\n  models.students.remove.mockImplementation(async row => {\n    const { id } = row;\n\n    // I want to keep the order of the array\n    const index = table.findIndex(item => item.id === id);\n    if (index < 0) throw new Error(`Item with Id ${id} not found on the table`);\n\n    table.splice(index, 1);\n  });\n\n  it(\"Insert users\", async () => {\n    bob.id = await handler.insert(bob);\n    alice.id = await handler.insert(alice);\n    trudy.id = await handler.insert(trudy);\n\n    const [first, second, thrid] = table;\n\n    expect(first.name).toBe(bob.name);\n    expect(second.name).toBe(alice.name);\n    expect(thrid.name).toBe(trudy.name);\n  });\n\n  it(\"Update Bob\", async () => {\n    bob.name += \" - UPDATED\";\n    alice.name += \" - UPDATED\";\n    trudy.name += \" - UPDATED\";\n\n    const { cpf: bobCpf, email: boboEmail, birthDate: boboBirthDate, gender: bobGender, ...bobPayload } = bob;\n    const { cpf: aliceCpf, email: aliceEmail, birthDate: aliceBirthDate, gender: aliceGender, ...alicePayload } = alice;\n    const { cpf: trudyCpf, email: trudyEmail, birthDate: trudyBirthDate, gender: trudyGender, ...trudyPayload } = trudy;\n\n    await handler.update(bobPayload);\n    await handler.update(alicePayload);\n    await handler.update(trudyPayload);\n\n    const [first, second, thrid] = table;\n\n    expect(first.name).toBe(bob.name);\n    expect(second.name).toBe(alice.name);\n    expect(thrid.name).toBe(trudy.name);\n  });\n\n  it(\"List test: limit 1 offset 0\", async () => {\n    const [first] = await handler.list({ limit: 1 });\n\n    expect(first.name).toBe(bob.name);\n  });\n\n  it(\"List test: limit 2 offset 0\", async () => {\n    const [first, second] = await handler.list({ limit: 2 });\n\n    expect(first.name).toBe(bob.name);\n    expect(second.name).toBe(alice.name);\n  });\n\n  it(\"List test: limit 1 offset 2\", async () => {\n    const [thrid] = await handler.list({ limit: 1, offset: 2 });\n\n    expect(thrid.name).toBe(trudy.name);\n  });\n\n  it(\"Removing exists\", async () => {\n    await handler.remove({ id: bob.id });\n    expect(table.length).toBe(2);\n\n    await handler.remove({ id: alice.id });\n    expect(table.length).toBe(1);\n\n    await handler.remove({ id: trudy.id });\n    expect(table.length).toBe(0);\n  });\n});\n"],"file":"index.test.js"}