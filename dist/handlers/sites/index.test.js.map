{"version":3,"sources":["../../../src/handlers/sites/index.test.js"],"names":["jest","mock","describe","site1","name","city","state","siteCode","site2","site3","table","models","sites","get","mockImplementation","params","query","limit","offset","filter","item","includes","slice","list","insert","row","id","length","createdAt","Date","modifiedAt","push","update","index","findIndex","Error","remove","splice","it","handler","first","second","thrid","expect","toBe","cpf","site1Cpf","email","site1oEmail","birthDate","site1oBirthDate","gender","site1Gender","site1Payload","site2Cpf","site2Email","site2BirthDate","site2Gender","site2Payload","site3Cpf","site3Email","site3BirthDate","site3Gender","site3Payload"],"mappings":";;;;AACA;;AACA;;AACA;;AAEAA,IAAI,CAACC,IAAL,CAAU,gBAAV;AAEAC,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5B,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,OADM;AAEZC,IAAAA,IAAI,EAAE,WAFM;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAd;AAOA,QAAMC,KAAK,GAAG;AACZJ,IAAAA,IAAI,EAAE,OADM;AAEZC,IAAAA,IAAI,EAAE,WAFM;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAd;AAOA,QAAME,KAAK,GAAG;AACZL,IAAAA,IAAI,EAAE,OADM;AAEZC,IAAAA,IAAI,EAAE,WAFM;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAd;AAOA,QAAMG,KAAK,GAAG,EAAd;AAEAC,EAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiBC,kBAAjB,CAAoC,MAAMC,MAAN,IAAgB;AAClD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAA2BH,MAAjC;AAEA,WAAOL,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAAChB,IAAL,CAAUiB,QAAV,CAAmBL,KAAnB,CAArB,EAAgDM,KAAhD,CAAsDJ,MAAtD,EAA8DD,KAAK,GAAGC,MAAtE,CAAP;AACD,GAJD;AAMAP,EAAAA,MAAM,CAACC,KAAP,CAAaW,IAAb,CAAkBT,kBAAlB,CAAqC,MAAMC,MAAN,IAAgB;AACnD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAK,GAAG,EAAjB;AAAqBC,MAAAA,MAAM,GAAG;AAA9B,QAAoCH,MAA1C;AAEA,QAAIC,KAAJ,EAAW,OAAON,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAAChB,IAAL,CAAUiB,QAAV,CAAmBL,KAAnB,CAArB,EAAgDM,KAAhD,CAAsDJ,MAAtD,EAA8DD,KAAK,GAAGC,MAAtE,CAAP;AACX,WAAOR,KAAK,CAACY,KAAN,CAAYJ,MAAZ,EAAoBD,KAAK,GAAGC,MAA5B,CAAP;AACD,GALD;AAOAP,EAAAA,MAAM,CAACC,KAAP,CAAaY,MAAb,CAAoBV,kBAApB,CAAuC,MAAMW,GAAN,IAAa;AAClD,UAAMC,EAAE,GAAGhB,KAAK,CAACiB,MAAN,GAAe,CAA1B;AACA,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,UAAU,GAAG,IAAID,IAAJ,EAAnB;AACAnB,IAAAA,KAAK,CAACqB,IAAN,CAAW,EAAE,GAAGN,GAAL;AAAUC,MAAAA,EAAV;AAAcE,MAAAA,SAAd;AAAyBE,MAAAA;AAAzB,KAAX;AACA,WAAOJ,EAAP;AACD,GAND;AAQAf,EAAAA,MAAM,CAACC,KAAP,CAAaoB,MAAb,CAAoBlB,kBAApB,CAAuC,MAAMW,GAAN,IAAa;AAClD,UAAM;AAAEC,MAAAA;AAAF,QAASD,GAAf;AACA,UAAMK,UAAU,GAAG,IAAID,IAAJ,EAAnB,CAFkD,CAIlD;;AACA,UAAMI,KAAK,GAAGvB,KAAK,CAACwB,SAAN,CAAgBd,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAApC,CAAd;AACA,QAAIO,KAAK,GAAG,CAAZ,EAAe,MAAM,IAAIE,KAAJ,CAAW,gBAAeT,EAAG,yBAA7B,CAAN;AAEfhB,IAAAA,KAAK,CAACuB,KAAD,CAAL,GAAe,EAAE,GAAGvB,KAAK,CAACuB,KAAD,CAAV;AAAmB,SAAGR,GAAtB;AAA2BK,MAAAA;AAA3B,KAAf;AACD,GATD;AAWAnB,EAAAA,MAAM,CAACC,KAAP,CAAawB,MAAb,CAAoBtB,kBAApB,CAAuC,MAAMW,GAAN,IAAa;AAClD,UAAM;AAAEC,MAAAA;AAAF,QAASD,GAAf,CADkD,CAGlD;;AACA,UAAMQ,KAAK,GAAGvB,KAAK,CAACwB,SAAN,CAAgBd,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAApC,CAAd;AACA,QAAIO,KAAK,GAAG,CAAZ,EAAe,MAAM,IAAIE,KAAJ,CAAW,gBAAeT,EAAG,yBAA7B,CAAN;AAEfhB,IAAAA,KAAK,CAAC2B,MAAN,CAAaJ,KAAb,EAAoB,CAApB;AACD,GARD;AAUAK,EAAAA,EAAE,CAAC,QAAD,EAAW,YAAY;AACvBnC,IAAAA,KAAK,CAACuB,EAAN,GAAW,MAAMa,OAAO,CAACf,MAAR,CAAerB,KAAf,CAAjB;AACAK,IAAAA,KAAK,CAACkB,EAAN,GAAW,MAAMa,OAAO,CAACf,MAAR,CAAehB,KAAf,CAAjB;AACAC,IAAAA,KAAK,CAACiB,EAAN,GAAW,MAAMa,OAAO,CAACf,MAAR,CAAef,KAAf,CAAjB;AAEA,UAAM,CAAC+B,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,IAAyBhC,KAA/B;AAEAiC,IAAAA,MAAM,CAACH,KAAK,CAACpC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBzC,KAAK,CAACC,IAA9B;AACAuC,IAAAA,MAAM,CAACF,MAAM,CAACrC,IAAR,CAAN,CAAoBwC,IAApB,CAAyBpC,KAAK,CAACJ,IAA/B;AACAuC,IAAAA,MAAM,CAACD,KAAK,CAACtC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBnC,KAAK,CAACL,IAA9B;AACD,GAVC,CAAF;AAYAkC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAY;AAC7BnC,IAAAA,KAAK,CAACC,IAAN,IAAc,YAAd;AACAI,IAAAA,KAAK,CAACJ,IAAN,IAAc,YAAd;AACAK,IAAAA,KAAK,CAACL,IAAN,IAAc,YAAd;AAEA,UAAM;AACJyC,MAAAA,GAAG,EAAEC,QADD;AAEJC,MAAAA,KAAK,EAAEC,WAFH;AAGJC,MAAAA,SAAS,EAAEC,eAHP;AAIJC,MAAAA,MAAM,EAAEC,WAJJ;AAKJ,SAAGC;AALC,QAMFlD,KANJ;AAOA,UAAM;AAAE0C,MAAAA,GAAG,EAAES,QAAP;AAAiBP,MAAAA,KAAK,EAAEQ,UAAxB;AAAoCN,MAAAA,SAAS,EAAEO,cAA/C;AAA+DL,MAAAA,MAAM,EAAEM,WAAvE;AAAoF,SAAGC;AAAvF,QAAwGlD,KAA9G;AACA,UAAM;AAAEqC,MAAAA,GAAG,EAAEc,QAAP;AAAiBZ,MAAAA,KAAK,EAAEa,UAAxB;AAAoCX,MAAAA,SAAS,EAAEY,cAA/C;AAA+DV,MAAAA,MAAM,EAAEW,WAAvE;AAAoF,SAAGC;AAAvF,QAAwGtD,KAA9G;AAEA,UAAM8B,OAAO,CAACP,MAAR,CAAeqB,YAAf,CAAN;AACA,UAAMd,OAAO,CAACP,MAAR,CAAe0B,YAAf,CAAN;AACA,UAAMnB,OAAO,CAACP,MAAR,CAAe+B,YAAf,CAAN;AAEA,UAAM,CAACvB,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,IAAyBhC,KAA/B;AAEAiC,IAAAA,MAAM,CAACH,KAAK,CAACpC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBzC,KAAK,CAACC,IAA9B;AACAuC,IAAAA,MAAM,CAACF,MAAM,CAACrC,IAAR,CAAN,CAAoBwC,IAApB,CAAyBpC,KAAK,CAACJ,IAA/B;AACAuC,IAAAA,MAAM,CAACD,KAAK,CAACtC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBnC,KAAK,CAACL,IAA9B;AACD,GAxBC,CAAF;AA0BAkC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAM,CAACE,KAAD,IAAU,MAAMD,OAAO,CAAChB,IAAR,CAAa;AAAEN,MAAAA,KAAK,EAAE;AAAT,KAAb,CAAtB;AAEA0B,IAAAA,MAAM,CAACH,KAAK,CAACpC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBzC,KAAK,CAACC,IAA9B;AACD,GAJC,CAAF;AAMAkC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAM,CAACE,KAAD,EAAQC,MAAR,IAAkB,MAAMF,OAAO,CAAChB,IAAR,CAAa;AAAEN,MAAAA,KAAK,EAAE;AAAT,KAAb,CAA9B;AAEA0B,IAAAA,MAAM,CAACH,KAAK,CAACpC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBzC,KAAK,CAACC,IAA9B;AACAuC,IAAAA,MAAM,CAACF,MAAM,CAACrC,IAAR,CAAN,CAAoBwC,IAApB,CAAyBpC,KAAK,CAACJ,IAA/B;AACD,GALC,CAAF;AAOAkC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAM,CAACI,KAAD,IAAU,MAAMH,OAAO,CAAChB,IAAR,CAAa;AAAEN,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAb,CAAtB;AAEAyB,IAAAA,MAAM,CAACD,KAAK,CAACtC,IAAP,CAAN,CAAmBwC,IAAnB,CAAwBnC,KAAK,CAACL,IAA9B;AACD,GAJC,CAAF;AAMAkC,EAAAA,EAAE,CAAC,iBAAD,EAAoB,YAAY;AAChC,UAAMC,OAAO,CAACH,MAAR,CAAe;AAAEV,MAAAA,EAAE,EAAEvB,KAAK,CAACuB;AAAZ,KAAf,CAAN;AACAiB,IAAAA,MAAM,CAACjC,KAAK,CAACiB,MAAP,CAAN,CAAqBiB,IAArB,CAA0B,CAA1B;AAEA,UAAML,OAAO,CAACH,MAAR,CAAe;AAAEV,MAAAA,EAAE,EAAElB,KAAK,CAACkB;AAAZ,KAAf,CAAN;AACAiB,IAAAA,MAAM,CAACjC,KAAK,CAACiB,MAAP,CAAN,CAAqBiB,IAArB,CAA0B,CAA1B;AAEA,UAAML,OAAO,CAACH,MAAR,CAAe;AAAEV,MAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAAZ,KAAf,CAAN;AACAiB,IAAAA,MAAM,CAACjC,KAAK,CAACiB,MAAP,CAAN,CAAqBiB,IAArB,CAA0B,CAA1B;AACD,GATC,CAAF;AAUD,CArIO,CAAR","sourcesContent":["\nimport \"dotenv/config\";\nimport * as handler from \"./index\";\nimport * as models from \"~/models\";\n\njest.mock(\"~/models/sites\");\n\ndescribe(\"Sites tests\", () => {\n  const site1 = {\n    name: \"site1\",\n    city: \"SAO PAULO\",\n    state: \"SP\",\n    siteCode: \"981932\",\n  };\n\n  const site2 = {\n    name: \"site2\",\n    city: \"SAO PAULO\",\n    state: \"SP\",\n    siteCode: \"981932\",\n  };\n\n  const site3 = {\n    name: \"site3\",\n    city: \"SAO PAULO\",\n    state: \"SP\",\n    siteCode: \"981932\",\n  };\n\n  const table = [];\n\n  models.sites.get.mockImplementation(async params => {\n    const { query, limit, offset } = params;\n\n    return table.filter(item => item.name.includes(query)).slice(offset, limit + offset);\n  });\n\n  models.sites.list.mockImplementation(async params => {\n    const { query, limit = 10, offset = 0 } = params;\n\n    if (query) return table.filter(item => item.name.includes(query)).slice(offset, limit + offset);\n    return table.slice(offset, limit + offset);\n  });\n\n  models.sites.insert.mockImplementation(async row => {\n    const id = table.length + 1;\n    const createdAt = new Date();\n    const modifiedAt = new Date();\n    table.push({ ...row, id, createdAt, modifiedAt });\n    return id;\n  });\n\n  models.sites.update.mockImplementation(async row => {\n    const { id } = row;\n    const modifiedAt = new Date();\n\n    // I want to keep the order of the array\n    const index = table.findIndex(item => item.id === id);\n    if (index < 0) throw new Error(`Item with Id ${id} not found on the table`);\n\n    table[index] = { ...table[index], ...row, modifiedAt };\n  });\n\n  models.sites.remove.mockImplementation(async row => {\n    const { id } = row;\n\n    // I want to keep the order of the array\n    const index = table.findIndex(item => item.id === id);\n    if (index < 0) throw new Error(`Item with Id ${id} not found on the table`);\n\n    table.splice(index, 1);\n  });\n\n  it(\"Insert\", async () => {\n    site1.id = await handler.insert(site1);\n    site2.id = await handler.insert(site2);\n    site3.id = await handler.insert(site3);\n\n    const [first, second, thrid] = table;\n\n    expect(first.name).toBe(site1.name);\n    expect(second.name).toBe(site2.name);\n    expect(thrid.name).toBe(site3.name);\n  });\n\n  it(\"Update site1\", async () => {\n    site1.name += \" - UPDATED\";\n    site2.name += \" - UPDATED\";\n    site3.name += \" - UPDATED\";\n\n    const {\n      cpf: site1Cpf,\n      email: site1oEmail,\n      birthDate: site1oBirthDate,\n      gender: site1Gender,\n      ...site1Payload\n    } = site1;\n    const { cpf: site2Cpf, email: site2Email, birthDate: site2BirthDate, gender: site2Gender, ...site2Payload } = site2;\n    const { cpf: site3Cpf, email: site3Email, birthDate: site3BirthDate, gender: site3Gender, ...site3Payload } = site3;\n\n    await handler.update(site1Payload);\n    await handler.update(site2Payload);\n    await handler.update(site3Payload);\n\n    const [first, second, thrid] = table;\n\n    expect(first.name).toBe(site1.name);\n    expect(second.name).toBe(site2.name);\n    expect(thrid.name).toBe(site3.name);\n  });\n\n  it(\"List test: limit 1 offset 0\", async () => {\n    const [first] = await handler.list({ limit: 1 });\n\n    expect(first.name).toBe(site1.name);\n  });\n\n  it(\"List test: limit 2 offset 0\", async () => {\n    const [first, second] = await handler.list({ limit: 2 });\n\n    expect(first.name).toBe(site1.name);\n    expect(second.name).toBe(site2.name);\n  });\n\n  it(\"List test: limit 1 offset 2\", async () => {\n    const [thrid] = await handler.list({ limit: 1, offset: 2 });\n\n    expect(thrid.name).toBe(site3.name);\n  });\n\n  it(\"Removing exists\", async () => {\n    await handler.remove({ id: site1.id });\n    expect(table.length).toBe(2);\n\n    await handler.remove({ id: site2.id });\n    expect(table.length).toBe(1);\n\n    await handler.remove({ id: site3.id });\n    expect(table.length).toBe(0);\n  });\n});\n"],"file":"index.test.js"}