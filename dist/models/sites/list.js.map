{"version":3,"sources":["../../../src/models/sites/list.js"],"names":["list","query","limit","offset","sql","sqlTotal","params","sqls","select","from","db","like","Number","rows","total","first","count"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,MAAMA,IAAI,GAAG,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAK,GAAG,EAAjB;AAAqBC,EAAAA,MAAM,GAAG;AAA9B,CAAP,KAA6C;AAC/D,MAAIC,GAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,MAAJ;;AAEA,MAAIL,KAAJ,EAAW;AACTG,IAAAA,GAAG,GAAI;AACX,UAAUG,IAAI,CAACC,MAAO;AACtB,UAAUD,IAAI,CAACE,IAAK;AACpB;AACA;AACA;AACA,OANI;AAQAJ,IAAAA,QAAQ,GAAI;AAChB;AACA,UAAUE,IAAI,CAACE,IAAK;AACpB;AACA,OAJI;AAMAH,IAAAA,MAAM,GAAG,CAAE,GAAEI,EAAE,CAACC,IAAH,CAAQV,KAAR,CAAe,EAAnB,EAAsBW,MAAM,CAACV,KAAD,CAA5B,EAAqCU,MAAM,CAACT,MAAD,CAA3C,CAAT;AACD,GAhBD,MAgBO;AACLC,IAAAA,GAAG,GAAI;AACX,UAAUG,IAAI,CAACC,MAAO;AACtB,UAAUD,IAAI,CAACE,IAAK;AACpB;AACA;AACA,OALI;AAOAH,IAAAA,MAAM,GAAG,CAACM,MAAM,CAACV,KAAD,CAAP,EAAgBU,MAAM,CAACT,MAAD,CAAtB,CAAT;AAEAE,IAAAA,QAAQ,GAAI;AAChB;AACA,UAAUE,IAAI,CAACE,IAAK;AACpB,OAHI;AAID;;AAED,QAAMI,IAAI,GAAG,MAAMH,EAAE,CAACF,MAAH,CAAUJ,GAAV,EAAeE,MAAf,CAAnB;AACA,QAAMQ,KAAK,GAAG,CAAC,MAAMJ,EAAE,CAACK,KAAH,CAASV,QAAT,EAAmBC,MAAnB,CAAP,EAAmCU,KAAjD;AAEA,SAAO;AAAEf,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBW,IAAAA,KAAxB;AAA+BD,IAAAA;AAA/B,GAAP;AACD,CAzCM","sourcesContent":["import * as db from \"~/core/database\";\nimport * as sqls from \"./sqls\";\n\nexport const list = async ({ query, limit = 10, offset = 0 }) => {\n  let sql;\n  let sqlTotal;\n  let params;\n\n  if (query) {\n    sql = `\n        ${sqls.select}\n        ${sqls.from}\n        where name like ?\n        order by name\n        limit ? offset ?\n      `;\n\n    sqlTotal = `\n        select count(*) as count\n        ${sqls.from}\n        where name like ?\n      `;\n\n    params = [`${db.like(query)}`, Number(limit), Number(offset)];\n  } else {\n    sql = `\n        ${sqls.select}\n        ${sqls.from}\n        order by name\n        limit ? offset ?\n      `;\n\n    params = [Number(limit), Number(offset)];\n\n    sqlTotal = `\n        select count(*) as count\n        ${sqls.from}\n      `;\n  }\n\n  const rows = await db.select(sql, params);\n  const total = (await db.first(sqlTotal, params)).count;\n\n  return { query, limit, offset, total, rows };\n};\n"],"file":"list.js"}