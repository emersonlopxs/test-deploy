{"version":3,"sources":["../../../src/models/associates/insert.js"],"names":["fsWriteFileAsync","util","promisify","fs","writeFile","fsUnlinkAsync","unlink","fsRealPathAsync","realpath","insert","name","color","description","button","link","params","trans","mimetype","split","imageBuffer","buffer","associateId","imageLink","update","blobServiceClient","BlobServiceClient","fromConnectionString","AZURE_STORAGE_CONNECTION_STRING","containerClient","getContainerClient","tempDir","os","tmpdir","tempfile","path","join","uuid","v4","blobClient","getBlobClient","toString","blockBlobClient","getBlockBlobClient","uploadFile"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,gBAAgB,GAAGC,cAAKC,SAAL,CAAeC,YAAGC,SAAlB,CAAzB;;AACA,MAAMC,aAAa,GAAGJ,cAAKC,SAAL,CAAeC,YAAGG,MAAlB,CAAtB;;AACA,MAAMC,eAAe,GAAGN,cAAKC,SAAL,CAAeC,YAAGK,QAAlB,CAAxB;;AAEO,MAAMC,MAAM,GAAG,OAAO;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA,IAApC;AAA0C,KAAGC;AAA7C,CAAP,KACpB,gCAAiB,MAAMC,KAAN,IAAe;AAC9B,QAAM,GAAGC,QAAH,IAAeF,MAAM,CAAC,GAAD,CAAN,CAAYE,QAAZ,CAAqBC,KAArB,CAA2B,GAA3B,CAArB;AACA,QAAMC,WAAW,GAAGJ,MAAM,CAAC,GAAD,CAAN,CAAYK,MAAhC;AAEA,QAAMC,WAAW,GAAG,MAAML,KAAK,CAACP,MAAN,CACvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAb8B,EAcxB,CAACC,IAAD,EAAOC,KAAP,EAAcC,WAAd,EAA2BC,MAA3B,EAAmCC,IAAnC,CAdwB,CAA1B;AAiBA,QAAMQ,SAAS,GAAI,gEAA+DD,WAAY,IAAGJ,QAAS,EAA1G;AAEA,QAAMD,KAAK,CAACO,MAAN,CACH;AACP;AACA;AACA;AACA,OALU,EAMJ,CAACD,SAAD,EAAYD,WAAZ,CANI,CAAN;;AASA,QAAMG,iBAAiB,GAAGC,+BAAkBC,oBAAlB,CAAuCC,uCAAvC,CAA1B;;AACA,QAAMC,eAAe,GAAGJ,iBAAiB,CAACK,kBAAlB,CAAqC,mBAArC,CAAxB;AACA,QAAMC,OAAO,GAAG,MAAMvB,eAAe,CAACwB,YAAGC,MAAH,EAAD,CAArC;;AACA,QAAMC,QAAQ,GAAGC,cAAKC,IAAL,CAAUL,OAAV,EAAmBM,cAAKC,EAAL,EAAnB,CAAjB;;AACA,QAAMrC,gBAAgB,CAACiC,QAAD,EAAWd,WAAX,CAAtB;AACA,QAAMmB,UAAU,GAAGV,eAAe,CAACW,aAAhB,CAA+B,GAAElB,WAAW,CAACmB,QAAZ,EAAuB,IAAGvB,QAAS,EAApE,CAAnB;AACA,QAAMwB,eAAe,GAAGH,UAAU,CAACI,kBAAX,EAAxB;AACA,QAAMD,eAAe,CAACE,UAAhB,CAA2BV,QAA3B,CAAN;AACA,QAAM5B,aAAa,CAAC4B,QAAD,CAAnB;AACD,CAzCD,CADK","sourcesContent":["import fs from \"fs\";\nimport util from \"util\";\nimport uuid from \"uuid\";\nimport os from \"os\";\nimport path from \"path\";\nimport { BlobServiceClient } from \"@azure/storage-blob\";\nimport { AZURE_STORAGE_CONNECTION_STRING } from \"~/core/config\";\nimport { beginTransaction } from \"~/core/database\";\n\nconst fsWriteFileAsync = util.promisify(fs.writeFile);\nconst fsUnlinkAsync = util.promisify(fs.unlink);\nconst fsRealPathAsync = util.promisify(fs.realpath);\n\nexport const insert = async ({ name, color, description, button, link, ...params }) =>\n  beginTransaction(async trans => {\n    const [, mimetype] = params[\"0\"].mimetype.split(\"/\");\n    const imageBuffer = params[\"0\"].buffer;\n\n    const associateId = await trans.insert(\n      `\n      insert into associates(\n        name,\n        color,\n        description,\n        button,\n        link,\n        created_at,\n        modified_at\n      ) values (\n        ?, ?, ?, ?, ?, now(), now()\n      )\n      `,\n      [name, color, description, button, link]\n    );\n\n    const imageLink = `https://gfacolesblob.blob.core.windows.net/associates-images/${associateId}.${mimetype}`;\n\n    await trans.update(\n      `\n      update associates\n        set imageLink = ?\n      where id = ?\n      `,\n      [imageLink, associateId]\n    );\n\n    const blobServiceClient = BlobServiceClient.fromConnectionString(AZURE_STORAGE_CONNECTION_STRING);\n    const containerClient = blobServiceClient.getContainerClient(\"associates-images\");\n    const tempDir = await fsRealPathAsync(os.tmpdir());\n    const tempfile = path.join(tempDir, uuid.v4());\n    await fsWriteFileAsync(tempfile, imageBuffer);\n    const blobClient = containerClient.getBlobClient(`${associateId.toString()}.${mimetype}`);\n    const blockBlobClient = blobClient.getBlockBlobClient();\n    await blockBlobClient.uploadFile(tempfile);\n    await fsUnlinkAsync(tempfile);\n  });\n"],"file":"insert.js"}