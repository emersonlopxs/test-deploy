{"version":3,"sources":["../../../src/models/students/update.js"],"names":["update","id","city","password","name","state","gradeId","isPublicSchool","schoolName","siteId","classTypes","subjects","db","helpers","hash","remove","map","classTypeId","insert","subjectId"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,MAAMA,MAAM,GAAG,OAAO;AAC3BC,EAAAA,EAD2B;AAE3BC,EAAAA,IAF2B;AAG3BC,EAAAA,QAH2B;AAI3BC,EAAAA,IAJ2B;AAK3BC,EAAAA,KAL2B;AAM3BC,EAAAA,OAN2B;AAO3BC,EAAAA,cAP2B;AAQ3BC,EAAAA,UAR2B;AAS3BC,EAAAA,MAT2B;AAU3BC,EAAAA,UAV2B;AAW3BC,EAAAA;AAX2B,CAAP,KAYhB;AACJ,MAAIR,QAAJ,EACE,MAAMS,EAAE,CAACZ,MAAH,CACH;AACP;AACA,SAHU,EAIJ,CAAC,MAAMa,OAAO,CAACV,QAAR,CAAiBW,IAAjB,CAAsBX,QAAtB,CAAP,EAAwCF,EAAxC,CAJI,CAAN;AAOF,QAAMW,EAAE,CAACZ,MAAH,CACH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAbQ,EAcJ,CAACE,IAAD,EAAOE,IAAP,EAAaC,KAAb,EAAoBC,OAApB,EAA6BC,cAA7B,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiER,EAAjE,CAdI,CAAN;;AAiBA,MAAIS,UAAJ,EAAgB;AACd,UAAME,EAAE,CAACG,MAAH,CACH;AACP;AACA;AACA;AACA,SALU,EAMJd,EANI,CAAN;AASAS,IAAAA,UAAU,CAACM,GAAX,CAAe,MAAMC,WAAN,IAAqB;AAClC,YAAML,EAAE,CAACM,MAAH,CACH;AACT;AACA;AACA,SAJY,EAKJ,CAACjB,EAAD,EAAKgB,WAAL,CALI,CAAN;AAOD,KARD;AASD;;AAED,MAAIN,QAAJ,EAAc;AACZ,UAAMC,EAAE,CAACG,MAAH,CACH;AACP;AACA;AACA;AACA,OALU,EAMJd,EANI,CAAN;AASAU,IAAAA,QAAQ,CAACK,GAAT,CAAa,MAAMG,SAAN,IAAmB;AAC9B,YAAMP,EAAE,CAACM,MAAH,CACH;AACT;AACA;AACA,SAJY,EAKJ,CAACjB,EAAD,EAAKkB,SAAL,CALI,CAAN;AAOD,KARD;AASD;AACF,CA/EM","sourcesContent":["import * as db from \"~/core/database\";\nimport * as helpers from \"~/helpers\";\n\nexport const update = async ({\n  id,\n  city,\n  password,\n  name,\n  state,\n  gradeId,\n  isPublicSchool,\n  schoolName,\n  siteId,\n  classTypes,\n  subjects,\n}) => {\n  if (password)\n    await db.update(\n      `\n          update users SET password = ? where id = ?\n        `,\n      [await helpers.password.hash(password), id]\n    );\n\n  await db.update(\n    `\n        update students SET\n          city = coalesce(?, city)\n          , name = coalesce(?, name)\n          , state = coalesce(?, state)\n          , gradeId = coalesce(?, gradeId)\n          , isPublicSchool = coalesce(?, isPublicSchool)\n          , schoolName = coalesce(?, schoolName)\n          , siteId = coalesce(?, siteId)\n          , createdAt = now()\n          , modifiedAt = now()\n        where userId = ?\n      `,\n    [city, name, state, gradeId, isPublicSchool, schoolName, siteId, id]\n  );\n\n  if (classTypes) {\n    await db.remove(\n      `\n          delete from userClasses\n          where userId = ?\n          AND classTypeId\n        `,\n      id\n    );\n\n    classTypes.map(async classTypeId => {\n      await db.insert(\n        `\n          insert into userClasses (userId, classTypeId, createdAt, modifiedAt)\n          values (?, ?, now(), now())\n        `,\n        [id, classTypeId]\n      );\n    });\n  }\n\n  if (subjects) {\n    await db.remove(\n      `\n        delete from userClasses\n        where userId = ?\n        AND subjectId\n      `,\n      id\n    );\n\n    subjects.map(async subjectId => {\n      await db.insert(\n        `\n          insert into userClasses (userId, subjectId, createdAt, modifiedAt)\n          values (?, ?, now(), now())\n        `,\n        [id, subjectId]\n      );\n    });\n  }\n};\n"],"file":"update.js"}