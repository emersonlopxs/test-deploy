{"version":3,"sources":["../../../src/models/teachers/insert.js"],"names":["insert","name","email","siteId","subjects","graduationUniversityName","graduationYear","workSchoolName","state","city","cpf","ddd","telephone","enabled","token","password","trans","userId","helpers","hash","DEFAULT_PASSWORD","Promise","all","map","subjectId"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,MAAM,GAAG,OAAO;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA,MAH2B;AAI3BC,EAAAA,QAAQ,GAAG,EAJgB;AAK3BC,EAAAA,wBAL2B;AAM3BC,EAAAA,cAN2B;AAO3BC,EAAAA,cAP2B;AAQ3BC,EAAAA,KAR2B;AAS3BC,EAAAA,IAT2B;AAU3BC,EAAAA,GAV2B;AAW3BC,EAAAA,GAX2B;AAY3BC,EAAAA,SAZ2B;AAa3BC,EAAAA,OAb2B;AAc3BC,EAAAA,KAd2B;AAe3BC,EAAAA;AAf2B,CAAP,KAiBpB,gCAAiB,MAAMC,KAAN,IAAe;AAC9B,QAAMC,MAAM,GAAG,MAAMD,KAAK,CAAChB,MAAN,CAClB;AACP;AACA;AACA,OAJyB,EAKnB,CAACE,KAAD,EAAQ,MAAMgB,OAAO,CAACH,QAAR,CAAiBI,IAAjB,CAAsBJ,QAAQ,IAAIK,wBAAlC,CAAd,EAAmEN,KAAnE,CALmB,CAArB;AAQA,QAAME,KAAK,CAAChB,MAAN,CACH;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAjCU,EAkCJ,CACEiB,MADF,EAEEhB,IAFF,EAGEE,MAHF,EAIEG,cAJF,EAKED,wBALF,EAMEE,cANF,EAOEC,KAPF,EAQEC,IARF,EASEC,GATF,EAUEC,GAVF,EAWEC,SAXF,EAYEC,OAZF,CAlCI,CAAN;AAkDA,QAAMQ,OAAO,CAACC,GAAR,CAAY,CAChBN,KAAK,CAAChB,MAAN,CACG;AACT;AACA;AACA,SAJM,EAKE,CAAC,SAAD,EAAYiB,MAAZ,CALF,CADgB,EAQhB,GAAGb,QAAQ,CAACmB,GAAT,CAAa,MAAMC,SAAN,IAAmB;AACjCR,IAAAA,KAAK,CAAChB,MAAN,CACG;AACX;AACA;AACA,WAJQ,EAKE,CAACiB,MAAD,EAASO,SAAT,CALF;AAOD,GARE,CARa,CAAZ,CAAN;AAkBD,CA7ED,CAjBK","sourcesContent":["import { beginTransaction } from \"~/core/database\";\nimport { DEFAULT_PASSWORD } from \"~/core/config\";\nimport * as helpers from \"~/helpers\";\n\nexport const insert = async ({\n  name,\n  email,\n  siteId,\n  subjects = [],\n  graduationUniversityName,\n  graduationYear,\n  workSchoolName,\n  state,\n  city,\n  cpf,\n  ddd,\n  telephone,\n  enabled,\n  token,\n  password,\n}) =>\n  beginTransaction(async trans => {\n    const userId = await trans.insert(\n      `\n        insert into users(username, password, token, createdAt, modifiedAt)\n        values(?, ?, ?, now(), now())\n      `,\n      [email, await helpers.password.hash(password || DEFAULT_PASSWORD), token]\n    );\n\n    await trans.insert(\n      `\n        insert into teachers(\n          userId\n          , name\n          , siteId\n          , graduationYear\n          , graduationUniversityName\n          , workSchoolName\n          , state\n          , city\n          , cpf\n          , ddd\n          , telephone\n          , enabled\n          , createdAt\n          , modifiedAt\n        ) values(\n          ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , ?\n          , now()\n          , now()\n        )\n      `,\n      [\n        userId,\n        name,\n        siteId,\n        graduationYear,\n        graduationUniversityName,\n        workSchoolName,\n        state,\n        city,\n        cpf,\n        ddd,\n        telephone,\n        enabled,\n      ]\n    );\n\n    await Promise.all([\n      trans.insert(\n        `\n          insert into usersRoles(roleId, userId, createdAt, modifiedAt)\n          values((select id from roles where alias = ?), ?, now(), now())\n        `,\n        [\"teacher\", userId]\n      ),\n      ...subjects.map(async subjectId => {\n        trans.insert(\n          `\n            insert into userClasses (userId, subjectId, createdAt, modifiedAt)\n            values (?, ?, now(), now())\n          `,\n          [userId, subjectId]\n        );\n      }),\n    ]);\n  });\n"],"file":"insert.js"}