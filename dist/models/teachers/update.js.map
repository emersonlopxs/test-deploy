{"version":3,"sources":["../../../src/models/teachers/update.js"],"names":["update","id","name","password","siteId","subjects","city","state","graduationUniversityName","graduationYear","workSchoolName","ddd","telephone","enabled","db","helpers","hash","remove","map","subjectId","insert"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,MAAMA,MAAM,GAAG,OAAO;AAC3BC,EAAAA,EAD2B;AAE3BC,EAAAA,IAF2B;AAG3BC,EAAAA,QAH2B;AAI3BC,EAAAA,MAJ2B;AAK3BC,EAAAA,QAL2B;AAM3BC,EAAAA,IAN2B;AAO3BC,EAAAA,KAP2B;AAQ3BC,EAAAA,wBAR2B;AAS3BC,EAAAA,cAT2B;AAU3BC,EAAAA,cAV2B;AAW3BC,EAAAA,GAX2B;AAY3BC,EAAAA,SAZ2B;AAa3BC,EAAAA;AAb2B,CAAP,KAchB;AACJ,MAAIV,QAAJ,EACE,MAAMW,EAAE,CAACd,MAAH,CACH;AACP;AACA,OAHU,EAIJ,CAAC,MAAMe,OAAO,CAACZ,QAAR,CAAiBa,IAAjB,CAAsBb,QAAtB,CAAP,EAAwCF,EAAxC,CAJI,CAAN;AAOF,QAAMa,EAAE,CAACd,MAAH,CACH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAdQ,EAeJ,CAACE,IAAD,EAAOE,MAAP,EAAeE,IAAf,EAAqBC,KAArB,EAA4BC,wBAA5B,EAAsDC,cAAtD,EAAsEC,cAAtE,EAAsFC,GAAtF,EAA2FC,SAA3F,EAAsGC,OAAtG,EAA+GZ,EAA/G,CAfI,CAAN;;AAkBA,MAAII,QAAJ,EAAc;AACZ,UAAMS,EAAE,CAACG,MAAH,CACH;AACP;AACA;AACA;AACA,OALU,EAMJhB,EANI,CAAN;AASAI,IAAAA,QAAQ,CAACa,GAAT,CAAa,MAAMC,SAAN,IAAmB;AAC9B,YAAML,EAAE,CAACM,MAAH,CACH;AACT;AACA;AACA,SAJY,EAKJ,CAACnB,EAAD,EAAKkB,SAAL,CALI,CAAN;AAOD,KARD;AASD;AACF,CA7DM","sourcesContent":["import * as db from \"~/core/database\";\nimport * as helpers from \"~/helpers\";\n\nexport const update = async ({\n  id,\n  name,\n  password,\n  siteId,\n  subjects,\n  city,\n  state,\n  graduationUniversityName,\n  graduationYear,\n  workSchoolName,\n  ddd,\n  telephone,\n  enabled,\n}) => {\n  if (password)\n    await db.update(\n      `\n        update users SET password = ? where id = ?\n      `,\n      [await helpers.password.hash(password), id]\n    );\n\n  await db.update(\n    `\n    update teachers SET\n      name = coalesce(?, name)\n      , siteId = coalesce(?, siteId)\n      , city = coalesce(?, city)\n      , state = coalesce(?, state)\n      , graduationUniversityName = coalesce(?, graduationUniversityName)\n      , graduationYear = coalesce(?, graduationYear)\n      , workSchoolName = coalesce(?, workSchoolName)\n      , ddd = coalesce(?, ddd)\n      , telephone = coalesce(?, telephone)\n      , enabled = coalesce(?, enabled)\n    where userId = ?\n    `,\n    [name, siteId, city, state, graduationUniversityName, graduationYear, workSchoolName, ddd, telephone, enabled, id]\n  );\n\n  if (subjects) {\n    await db.remove(\n      `\n        delete from userClasses\n        where userId = ?\n        AND subjectId\n      `,\n      id\n    );\n\n    subjects.map(async subjectId => {\n      await db.insert(\n        `\n          insert into userClasses (userId, subjectId, createdAt, modifiedAt)\n          values (?, ?, now(), now())\n        `,\n        [id, subjectId]\n      );\n    });\n  }\n};\n"],"file":"update.js"}