{"version":3,"sources":["../../src/core/config.js"],"names":["PORT","process","env","IS_PRODUCTION_ENVIROMENT","NODE_ENV","LOG_REQUESTS_RESPONSES_TO_CONSOLE","JWT_SECRET","BCRYPT_ROUNDS","DEFAULT_PASSWORD","DB_NAME","DB_HOST","DB_PASSWORD","DB_PORT","DB_USER","DB_CERT","SENDGRID_SUBJECT_RESET_PASSWORD","SENDGRID_FROM","SENDGRID_KEY","AZURE_STORAGE_CONNECTION_STRING","forEach","item","StartupError"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AAEO,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AACA,MAAMG,wBAAwB,GAAGF,OAAO,CAACC,GAAR,CAAYE,QAAZ,KAAyB,YAA1D;AAEP;AACA;AACA;;;AAEO,MAAMC,iCAAiC,GAAG,CAAC,CAACJ,OAAO,CAACC,GAAR,CAAYG,iCAAxD;AAEP;AACA;AACA;;;AAEO,MAAMC,UAAU,GAAGL,OAAO,CAACC,GAAR,CAAYI,UAAZ,IAA0B,YAA7C;;AACA,MAAMC,aAAa,GAAGN,OAAO,CAACC,GAAR,CAAYK,aAAZ,IAA6B,EAAnD;;AACA,MAAMC,gBAAgB,GAAGP,OAAO,CAACC,GAAR,CAAYM,gBAAZ,IAAgC,UAAzD;AAEP;AACA;AACA;;;AAEO,MAAM;AAAEC,EAAAA;AAAF,IAAcR,OAAO,CAACC,GAA5B;;AACA,MAAM;AAAEQ,EAAAA;AAAF,IAAcT,OAAO,CAACC,GAA5B;;AACA,MAAM;AAAES,EAAAA;AAAF,IAAkBV,OAAO,CAACC,GAAhC;;AACA,MAAM;AAAEU,EAAAA;AAAF,IAAcX,OAAO,CAACC,GAA5B;;AACA,MAAM;AAAEW,EAAAA;AAAF,IAAcZ,OAAO,CAACC,GAA5B;;AACA,MAAM;AAAEY,EAAAA;AAAF,IAAcb,OAAO,CAACC,GAA5B;AAEP;AACA;AACA;;;AAEO,MAAMa,+BAA+B,GAC1Cd,OAAO,CAACC,GAAR,CAAYa,+BAAZ,IAA+C,wCAD1C;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBf,OAAO,CAACC,GAAlC;;AACA,MAAM;AAAEe,EAAAA;AAAF,IAAmBhB,OAAO,CAACC,GAAjC;AAEP;AACA;AACA;;;AAEO,MAAM;AAAEgB,EAAAA;AAAF,IAAsCjB,OAAO,CAACC,GAApD;AAEP;AACA;AACA;;;;AACA,IAAID,OAAO,CAACC,GAAR,CAAYE,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,GAAC,SAAD,EAAY,SAAZ,EAAuB,aAAvB,EAAsC,SAAtC,EAAiD,SAAjD,EAA4D,eAA5D,EAA6E,cAA7E,EAA6Fe,OAA7F,CAAqGC,IAAI,IAAI;AAC3G,QAAI,CAACnB,OAAO,CAACC,GAAR,CAAYkB,IAAZ,CAAL,EACE,MAAM,IAAIC,oBAAJ,CAAkB,wCAAuCD,IAAK,gBAAenB,OAAO,CAACC,GAAR,CAAYE,QAAS,EAAlG,CAAN;AACH,GAHD;AAID","sourcesContent":["import { StartupError } from \"~/errors\";\n\n/**\n * Startup\n */\n\nexport const PORT = process.env.PORT || 3000;\nexport const IS_PRODUCTION_ENVIROMENT = process.env.NODE_ENV === \"production\";\n\n/**\n * Develpment Options\n */\n\nexport const LOG_REQUESTS_RESPONSES_TO_CONSOLE = !!process.env.LOG_REQUESTS_RESPONSES_TO_CONSOLE;\n\n/**\n * JWT\n */\n\nexport const JWT_SECRET = process.env.JWT_SECRET || \"1234567890\";\nexport const BCRYPT_ROUNDS = process.env.BCRYPT_ROUNDS || 10;\nexport const DEFAULT_PASSWORD = process.env.DEFAULT_PASSWORD || \"12345678\";\n\n/**\n * Database\n */\n\nexport const { DB_NAME } = process.env;\nexport const { DB_HOST } = process.env;\nexport const { DB_PASSWORD } = process.env;\nexport const { DB_PORT } = process.env;\nexport const { DB_USER } = process.env;\nexport const { DB_CERT } = process.env;\n\n/**\n * Sendgrid\n */\n\nexport const SENDGRID_SUBJECT_RESET_PASSWORD =\n  process.env.SENDGRID_SUBJECT_RESET_PASSWORD || \"Gerando Falcões - Recuperação de senha\";\nexport const { SENDGRID_FROM } = process.env;\nexport const { SENDGRID_KEY } = process.env;\n\n/**\n * CLOUD FILE STORAGE\n */\n\nexport const { AZURE_STORAGE_CONNECTION_STRING } = process.env;\n\n/**\n * Required variables\n */\nif (process.env.NODE_ENV !== \"test\") {\n  [\"DB_NAME\", \"DB_HOST\", \"DB_PASSWORD\", \"DB_USER\", \"DB_CERT\", \"SENDGRID_FROM\", \"SENDGRID_KEY\"].forEach(item => {\n    if (!process.env[item])\n      throw new StartupError(`The enviroment variable is required: ${item} - NODE_ENV: ${process.env.NODE_ENV}`);\n  });\n}\n"],"file":"config.js"}