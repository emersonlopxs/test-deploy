{"version":3,"sources":["../../src/helpers/jwt.js"],"names":["jwtSign","jsonwebtoken","sign","jwtVerify","verify","payload","JWT_SECRET","token"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,OAAO,GAAG,qBAAUC,sBAAaC,IAAvB,CAAhB;AACA,MAAMC,SAAS,GAAG,qBAAUF,sBAAaG,MAAvB,CAAlB;AAEA;AACA;AACA;AACA;;AACO,MAAMF,IAAI,GAAGG,OAAO,IAAIL,OAAO,CAACK,OAAD,EAAUC,kBAAV,CAA/B;AAEP;AACA;AACA;AACA;;;;;AACO,MAAMF,MAAM,GAAGG,KAAK,IAAIJ,SAAS,CAACI,KAAD,EAAQD,kBAAR,CAAjC","sourcesContent":["import jsonwebtoken from \"jsonwebtoken\";\nimport { promisify } from \"util\";\nimport { JWT_SECRET } from \"~/core/config\";\n\nconst jwtSign = promisify(jsonwebtoken.sign);\nconst jwtVerify = promisify(jsonwebtoken.verify);\n\n/**\n * Generate the JWT token with the provided payload\n * @param {*} payload\n */\nexport const sign = payload => jwtSign(payload, JWT_SECRET);\n\n/**\n * Verify if JWT token is valid and return its payload\n * @param {*} token\n */\nexport const verify = token => jwtVerify(token, JWT_SECRET);\n"],"file":"jwt.js"}